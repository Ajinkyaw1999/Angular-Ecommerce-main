{"ast":null,"code":"import { __decorate } from \"tslib\";\n//Product-View.Component.ts\nimport { Component } from \"@angular/core\";\nlet ProductViewComponent = class ProductViewComponent {\n  constructor(api, categoryService) {\n    this.api = api;\n    this.categoryService = categoryService;\n  }\n  ngOnInit() {\n    this.displayproducts();\n    this.subscribeToCategoryChanges();\n    localStorage.removeItem(\"ecomdata\");\n  }\n  displayproducts() {\n    this.api.getproduct().subscribe(res => {\n      this.data = res;\n      console.log(res);\n    });\n  }\n  addtocart(item) {\n    this.api.addtocart(item);\n  }\n  removeitem(item) {\n    this.api.removecartitem(item);\n  }\n  searchProducts(keyword) {\n    if (keyword.trim() !== '') {\n      this.api.searchProduct(keyword).subscribe(res => {\n        this.data = res;\n      });\n    } else {\n      // If the search bar is empty, display all products\n      this.displayproducts();\n    }\n  }\n  subscribeToCategoryChanges() {\n    this.categoryService.currentCategory.subscribe(category => {\n      if (category !== 'all') {\n        this.displayProductsByCategory(category);\n      } else {\n        this.displayProducts();\n      }\n    });\n  }\n  // Other methods...\n  displayProductsByCategory(category) {\n    this.api.getProductsByCategory(category).subscribe(res => {\n      this.data = res;\n    });\n  }\n};\nProductViewComponent = __decorate([Component({\n  selector: \"app-product-view\",\n  templateUrl: \"./product-view.component.html\",\n  styleUrls: [\"./product-view.component.css\"]\n})], ProductViewComponent);\nexport { ProductViewComponent };","map":{"version":3,"mappings":";AAAA;AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YAAoBC,GAAe,EAAUC,eAAgC;IAAzD,QAAG,GAAHD,GAAG;IAAsB,oBAAe,GAAfC,eAAe;EAAoB;EAEhFC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,0BAA0B,EAAE;IACjCC,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;EACrC;EACAH,eAAe;IACb,IAAI,CAACH,GAAG,CAACO,UAAU,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MACtC,IAAI,CAACC,IAAI,GAAGD,GAAG;MACfE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EACAI,SAAS,CAACC,IAAa;IACrB,IAAI,CAACd,GAAG,CAACa,SAAS,CAACC,IAAI,CAAC;EAC1B;EAEAC,UAAU,CAACD,IAAa;IACtB,IAAI,CAACd,GAAG,CAACgB,cAAc,CAACF,IAAI,CAAC;EAC/B;EAECG,cAAc,CAACC,OAAe;IAC7B,IAAIA,OAAO,CAACC,IAAI,EAAE,KAAK,EAAE,EAAE;MACzB,IAAI,CAACnB,GAAG,CAACoB,aAAa,CAACF,OAAO,CAAC,CAACV,SAAS,CAAEC,GAAG,IAAI;QAChD,IAAI,CAACC,IAAI,GAAGD,GAAG;MACjB,CAAC,CAAC;KACH,MAAM;MACL;MACA,IAAI,CAACN,eAAe,EAAE;;EAE1B;EAEAC,0BAA0B;IACxB,IAAI,CAACH,eAAe,CAACoB,eAAe,CAACb,SAAS,CAAEc,QAAQ,IAAI;MAC1D,IAAIA,QAAQ,KAAK,KAAK,EAAE;QACtB,IAAI,CAACC,yBAAyB,CAACD,QAAQ,CAAC;OACzC,MAAM;QACL,IAAI,CAACE,eAAe,EAAE;;IAE1B,CAAC,CAAC;EACJ;EAEA;EAEAD,yBAAyB,CAACD,QAAgB;IACxC,IAAI,CAACtB,GAAG,CAACyB,qBAAqB,CAACH,QAAQ,CAAC,CAACd,SAAS,CAAEC,GAAG,IAAI;MACzD,IAAI,CAACC,IAAI,GAAGD,GAAG;IACjB,CAAC,CAAC;EACJ;CACD;AApDYX,oBAAoB,eALhCD,SAAS,CAAC;EACT6B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW9B,oBAAoB,CAoDhC;SApDYA,oBAAoB","names":["Component","ProductViewComponent","constructor","api","categoryService","ngOnInit","displayproducts","subscribeToCategoryChanges","localStorage","removeItem","getproduct","subscribe","res","data","console","log","addtocart","item","removeitem","removecartitem","searchProducts","keyword","trim","searchProduct","currentCategory","category","displayProductsByCategory","displayProducts","getProductsByCategory","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["G:\\Sarohi sprint 1\\Angular Application\\Angular-Ecommerce-main\\src\\app\\component\\product-view\\product-view.component.ts"],"sourcesContent":["//Product-View.Component.ts\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ApiService } from \"src/app/Services/api.service\";\r\nimport { product } from \"./productmodal\";\r\n\r\n@Component({\r\n  selector: \"app-product-view\",\r\n  templateUrl: \"./product-view.component.html\",\r\n  styleUrls: [\"./product-view.component.css\"],\r\n})\r\nexport class ProductViewComponent implements OnInit {\r\n  data: any | product[];\r\n  item: any;\r\n  constructor(private api: ApiService, private categoryService: CategoryService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.displayproducts();\r\n    this.subscribeToCategoryChanges();\r\n    localStorage.removeItem(\"ecomdata\");\r\n  }\r\n  displayproducts() {\r\n    this.api.getproduct().subscribe((res) => {\r\n      this.data = res;\r\n      console.log(res);\r\n    });\r\n  }\r\n  addtocart(item: product) {\r\n    this.api.addtocart(item);\r\n  }\r\n\r\n  removeitem(item: product) {\r\n    this.api.removecartitem(item);\r\n  }\r\n\r\n   searchProducts(keyword: string) {\r\n    if (keyword.trim() !== '') {\r\n      this.api.searchProduct(keyword).subscribe((res) => {\r\n        this.data = res;\r\n      });\r\n    } else {\r\n      // If the search bar is empty, display all products\r\n      this.displayproducts();\r\n    }\r\n  }\r\n\r\n  subscribeToCategoryChanges() {\r\n    this.categoryService.currentCategory.subscribe((category) => {\r\n      if (category !== 'all') {\r\n        this.displayProductsByCategory(category);\r\n      } else {\r\n        this.displayProducts();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Other methods...\r\n\r\n  displayProductsByCategory(category: string) {\r\n    this.api.getProductsByCategory(category).subscribe((res) => {\r\n      this.data = res;\r\n    });\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}