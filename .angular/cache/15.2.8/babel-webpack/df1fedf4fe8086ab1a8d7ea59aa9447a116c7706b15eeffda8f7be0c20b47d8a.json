{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nlet CartPageComponent = class CartPageComponent {\n  constructor(api) {\n    this.api = api;\n    this.showproduct = [];\n    this.totalamount = 0;\n    this.taxamount = 0;\n    this.finalamount = 0;\n    this.addressform = false;\n    this.sentamount = 0;\n  }\n  ngOnInit() {\n    this.api.products().subscribe(res => {\n      this.showproduct = res;\n      this.totalamount = this.api.calculateprice();\n      console.log(\"total amt is\", this.totalamount);\n      // calculation with tax 18 percent\n      this.taxamount = this.totalamount / 100 * 18;\n      console.log(this.taxamount, \"is tax amount\");\n      this.finalamount = this.taxamount + this.totalamount;\n      //Sending final amount to order component\n      this.sentamount = this.finalamount;\n      this.api.sendfinalamount(this.sentamount);\n    });\n    //form\n    this.myform = new FormGroup({\n      email: new FormControl(\"\", Validators.required),\n      name: new FormControl(\"\", Validators.required),\n      mobile: new FormControl(\"\", Validators.required),\n      address: new FormControl(\"\", Validators.required)\n    });\n  }\n  deleteitem(item) {\n    this.api.removecartitem(item);\n  }\n  Empty() {\n    this.api.removeallitems();\n  }\n  cancel() {\n    this.addressform = false;\n    this.myform.reset();\n    localStorage.removeItem(\"ecomdata\");\n  }\n  onsubmit() {\n    this.myform.value;\n    console.log(this.myform.value);\n    localStorage.setItem(\"ecomdata\", JSON.stringify(this.myform.value.name));\n    //this.myform.reset();\n  }\n\n  onlinepay() {\n    localStorage.setItem(\"ecomdata\", JSON.stringify(this.myform.value.name));\n  }\n};\nCartPageComponent = __decorate([Component({\n  selector: \"app-cart-page\",\n  templateUrl: \"./cart-page.component.html\",\n  styleUrls: [\"./cart-page.component.css\"]\n})], CartPageComponent);\nexport { CartPageComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAuB,eAAe;AAGxD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAM5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAQ5BC,YAAoBC,GAAe;IAAf,QAAG,GAAHA,GAAG;IAPvB,gBAAW,GAAQ,EAAE;IACd,gBAAW,GAAW,CAAC;IACvB,cAAS,GAAW,CAAC;IACrB,gBAAW,GAAW,CAAC;IACvB,gBAAW,GAAG,KAAK;IACnB,eAAU,GAAW,CAAC;EAES;EACtCC,QAAQ;IACN,IAAI,CAACD,GAAG,CAACE,QAAQ,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MACpC,IAAI,CAACC,WAAW,GAAGD,GAAG;MACtB,IAAI,CAACE,WAAW,GAAG,IAAI,CAACN,GAAG,CAACO,cAAc,EAAE;MAC5CC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACH,WAAW,CAAC;MAC7C;MACA,IAAI,CAACI,SAAS,GAAI,IAAI,CAACJ,WAAW,GAAG,GAAG,GAAI,EAAE;MAC9CE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,SAAS,EAAE,eAAe,CAAC;MAE5C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACD,SAAS,GAAG,IAAI,CAACJ,WAAW;MACpD;MACA,IAAI,CAACM,UAAU,GAAG,IAAI,CAACD,WAAW;MAClC,IAAI,CAACX,GAAG,CAACa,eAAe,CAAC,IAAI,CAACD,UAAU,CAAC;IAC3C,CAAC,CAAC;IACF;IACA,IAAI,CAACE,MAAM,GAAG,IAAIlB,SAAS,CAAC;MAC1BmB,KAAK,EAAE,IAAIpB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACmB,QAAQ,CAAC;MAC/CC,IAAI,EAAE,IAAItB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACmB,QAAQ,CAAC;MAC9CE,MAAM,EAAE,IAAIvB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACmB,QAAQ,CAAC;MAChDG,OAAO,EAAE,IAAIxB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACmB,QAAQ;KACjD,CAAC;EACJ;EACAI,UAAU,CAACC,IAAa;IACtB,IAAI,CAACrB,GAAG,CAACsB,cAAc,CAACD,IAAI,CAAC;EAC/B;EACAE,KAAK;IACH,IAAI,CAACvB,GAAG,CAACwB,cAAc,EAAE;EAC3B;EACAC,MAAM;IACJ,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACZ,MAAM,CAACa,KAAK,EAAE;IACnBC,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;EACrC;EACAC,QAAQ;IACN,IAAI,CAAChB,MAAM,CAACiB,KAAK;IACjBvB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,MAAM,CAACiB,KAAK,CAAC;IAC9BH,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACpB,MAAM,CAACiB,KAAK,CAACd,IAAI,CAAC,CAAC;IACxE;EACF;;EACAkB,SAAS;IACPP,YAAY,CAACI,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACpB,MAAM,CAACiB,KAAK,CAACd,IAAI,CAAC,CAAC;EAC1E;CACD;AAnDYnB,iBAAiB,eAL7BJ,SAAS,CAAC;EACT0C,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWxC,iBAAiB,CAmD7B;SAnDYA,iBAAiB","names":["Component","FormControl","FormGroup","Validators","CartPageComponent","constructor","api","ngOnInit","products","subscribe","res","showproduct","totalamount","calculateprice","console","log","taxamount","finalamount","sentamount","sendfinalamount","myform","email","required","name","mobile","address","deleteitem","item","removecartitem","Empty","removeallitems","cancel","addressform","reset","localStorage","removeItem","onsubmit","value","setItem","JSON","stringify","onlinepay","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["G:\\Sarohi sprint 1\\Angular Application\\Angular-Ecommerce-main\\src\\app\\component\\cart-page\\cart-page.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { ApiService } from \"src/app/Services/api.service\";\r\nimport { product } from \"../product-view/productmodal\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-cart-page\",\r\n  templateUrl: \"./cart-page.component.html\",\r\n  styleUrls: [\"./cart-page.component.css\"],\r\n})\r\nexport class CartPageComponent implements OnInit {\r\n  showproduct: any = [];\r\n  public totalamount: number = 0;\r\n  public taxamount: number = 0;\r\n  public finalamount: number = 0;\r\n  public addressform = false;\r\n  public sentamount: number = 0;\r\n  myform: FormGroup | any;\r\n  constructor(private api: ApiService) {}\r\n  ngOnInit(): void {\r\n    this.api.products().subscribe((res) => {\r\n      this.showproduct = res;\r\n      this.totalamount = this.api.calculateprice();\r\n      console.log(\"total amt is\", this.totalamount);\r\n      // calculation with tax 18 percent\r\n      this.taxamount = (this.totalamount / 100) * 18;\r\n      console.log(this.taxamount, \"is tax amount\");\r\n\r\n      this.finalamount = this.taxamount + this.totalamount;\r\n      //Sending final amount to order component\r\n      this.sentamount = this.finalamount;\r\n      this.api.sendfinalamount(this.sentamount);\r\n    });\r\n    //form\r\n    this.myform = new FormGroup({\r\n      email: new FormControl(\"\", Validators.required),\r\n      name: new FormControl(\"\", Validators.required),\r\n      mobile: new FormControl(\"\", Validators.required),\r\n      address: new FormControl(\"\", Validators.required),\r\n    });\r\n  }\r\n  deleteitem(item: product) {\r\n    this.api.removecartitem(item);\r\n  }\r\n  Empty() {\r\n    this.api.removeallitems();\r\n  }\r\n  cancel() {\r\n    this.addressform = false;\r\n    this.myform.reset();\r\n    localStorage.removeItem(\"ecomdata\");\r\n  }\r\n  onsubmit() {\r\n    this.myform.value;\r\n    console.log(this.myform.value);\r\n    localStorage.setItem(\"ecomdata\", JSON.stringify(this.myform.value.name));\r\n    //this.myform.reset();\r\n  }\r\n  onlinepay() {\r\n    localStorage.setItem(\"ecomdata\", JSON.stringify(this.myform.value.name));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}